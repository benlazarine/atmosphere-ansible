- name: bootscript_1 - make directories for post scripts and logs
  file: path={{ item }} state=directory
  with_items: '{{ POST_MAKE_DIRS }}'

- name: bootscript_2 - copy scripts to script directory
  copy:
    content: "{{ item.text }}"
    dest: "{{INSTANCE_SCRIPT_DIR}}/{{item.name}}"
    mode: "u+rwx"
  with_items: '{{ SCRIPTS }}'

#Reviewer NOTE:
# - Can we refactor for-loop and log-name logic to ansible?
- name: bootscript_3 - execute scripts found in RUN_SCRIPT_DIRS
  shell: |
    set -m  # allows backgrounded processes to persist
    for SCRIPT in {{item.dir}}/*;
    do
      if [[ -f $SCRIPT && -x $SCRIPT ]]; then
        LOG_DIR="{{item.log}}"
        BASENAME=${SCRIPT##*/}
        DATE=$(date +%F_%T)
        SCRIPT_STDOUT=$LOG_DIR/$BASENAME.$DATE.stdout
        SCRIPT_STDERR=$LOG_DIR/$BASENAME.$DATE.stderr
        ATMO_USER={{ATMOUSERNAME}} nohup $SCRIPT >$SCRIPT_STDOUT 2>$SCRIPT_STDERR </dev/null &
      fi
    done
    exit 0
  args:
    executable: /bin/bash
  register: shell_result
  with_items: '{{ RUN_SCRIPTS }}'

# Helpful if the shell script above fails..
# - debug: msg="item.item={{item.item}}, item.stdout={{item.stdout}}, item.changed={{item.changed}}"
#   with_items: "{{shell_result.results}}"


- name: bootscript_4 - Remove instance scripts to avoid being picked up on next run
  file:
    path: "{{INSTANCE_SCRIPT_DIR}}/{{ item.name }}"
    state: absent
  with_items: '{{ SCRIPTS }}'
