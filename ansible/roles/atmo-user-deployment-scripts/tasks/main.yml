- fail: msg="Variable DEPLOY_SCRIPTS is not set."
  when: DEPLOY_SCRIPTS is not defined

- fail: msg="Variable ASYNC_SCRIPTS is not set."
  when: ASYNC_SCRIPTS is not defined

- name: deploy_script_0 - make directories for scripts and logs
  file: path={{ item }} state=directory
  with_items: '{{ POST_MAKE_DIRS }}'

- name: deploy_script_1 - make a README for context
  template:
    src: README.txt.j2
    dest: "{{SCRIPTS_ROOT}}/README.txt"


- name: deploy_script_2a - copy scripts to available scripts directory
  copy:
    content: "{{ item.text }}"
    dest: "{{INSTANCE_SCRIPT_AVAILABLE_DIR}}/{{item.name}}"
    mode: "u+rwx"
  with_items: '{{ DEPLOY_SCRIPTS }}'

- name: bootscript_2b - symlink from available scripts to script directory
  file:
    src: "{{INSTANCE_SCRIPT_AVAILABLE_DIR}}/{{item.name}}"
    dest: "{{INSTANCE_SCRIPT_DIR}}/{{item.name}}"
    mode: "u+rwx"
    state: link
  with_items: '{{ DEPLOY_SCRIPTS }}'

# Subspace uses this `register` variable to determine RC (return-code)
#
- name: deploy_script_3 - Run deploy boot scripts synchronously, register results and return if failure occurs.
  shell: "ATMO_USER={{ATMOUSERNAME}} {{INSTANCE_SCRIPT_DIR}}/{{item.name}}"
  register: "deploy_script_result"
  with_items: '{{ DEPLOY_SCRIPTS }}'

- name: deploy_script_4 - Remove instance scripts to avoid being picked up on next run
  file:
    path: "{{INSTANCE_SCRIPT_DIR}}/{{ item.name }}"
    state: absent
  with_items: '{{ DEPLOY_SCRIPTS }}'


- name: deploy_script_5a - copy scripts to available scripts directory
  copy:
    content: "{{ item.text }}"
    dest: "{{INSTANCE_SCRIPT_AVAILABLE_DIR}}/{{item.name}}"
    mode: "u+rwx"
  with_items: '{{ ASYNC_SCRIPTS }}'

- name: deploy_script_5b - symlink from available scripts to script directory
  file:
    src: "{{INSTANCE_SCRIPT_AVAILABLE_DIR}}/{{item.name}}"
    dest: "{{INSTANCE_SCRIPT_DIR}}/{{item.name}}"
    mode: "u+rwx"
    state: link
  with_items: '{{ ASYNC_SCRIPTS }}'

- name: deploy_script_6a - Execute scripts
  shell: 'ATMO_USER={{ ATMOUSERNAME }} nohup {{ INSTANCE_SCRIPT_DIR }}/{{ item.name }} &'
  register: SCRIPT_RESULT
  with_items: '{{ ASYNC_SCRIPTS }}'

- name: deploy_script_6b - Register date
  command: 'date +"%Y-%m-%d-%H:%M"'
  register: DATE

- name: deploy_script_6c - Create logs
  template:
    src: 'deploy_log.j2'
    dest: '{{ INSTANCE_SCRIPT_LOG_DIR }}/{{ item.item.name }}_{{ DATE.stdout }}.log'
  with_items: '{{ SCRIPT_RESULT.results }}'

- name: deploy_script_7 - Remove instance scripts to avoid being picked up on next run
  file:
    path: "{{INSTANCE_SCRIPT_DIR}}/{{ item.name }}"
    state: absent
  with_items: '{{ ASYNC_SCRIPTS }}'
